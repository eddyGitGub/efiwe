<template>
  <div id="register-ui" class="header-bg">
    <main class="grid__padding__sm static-form">
      <div class="webapp-content__inner">
        <div class="center-txt  mt-10">

          <div class="webapp-user-form-wrapper np" :class="headerTag">

            <div class="webapp-user-form-inner np">

              <form name="form">

                <div class="form-wrapper">
                  <div class="mt-60-pc"></div>
                  <div v-if="regVerification === 1" class="form-loader form-loader-signup verify">
                    <!--<div class="center-txt webapp-ripple-text"><i class="fas fa-user-plus"></i> Creating Account</div>-->

                    <!--<div class="webapp-ripple">-->
                      <!--<div></div>-->
                      <!--<div></div>-->
                    <!--</div>-->

                    <div class="center-txt webapp-ripple-text"><i class="fas fa-business-time"></i> Coming Soon</div>

                    <div class="webapp-ripple">
                      <div></div><div></div>
                    </div>

                  </div>
                  <div v-else-if="regVerification === 2" class="form-loader form-loader-signup success">
                    <div class="center-txt webapp-ripple-text"><i class="fas fa-user"></i> Account Created</div>

                    <div class="webapp-ripple">
                      <div></div>
                      <i class="webapp-ripple-notification fa fa-check-circle"></i>
                      <div></div>
                    </div>

                  </div>
                  <div v-else-if="regVerification === 3" class="form-loader form-loader-signup failure">
                    <!--<div class="center-txt webapp-ripple-text"><i class="fa fa-bell"></i> Registration Error</div>-->

                    <!--<div class="webapp-ripple">-->
                      <!--<div></div>-->
                      <!--<i class="webapp-ripple-notification fa fa-times-circle"></i>-->
                      <!--<div></div>-->
                    <!--</div>-->

                    <div class="center-txt webapp-ripple-text"><i class="fas fa-business-time"></i> Coming Soon</div>

                    <div class="webapp-ripple">
                      <div></div><div></div>
                    </div>

                  </div>
                  <div v-else-if="regVerification === 4" class="form-loader form-loader-signup notify">
                    <div class="center-txt webapp-ripple-text"><i class="fas fa-comment-alt"></i> Already Registered
                    </div>

                    <div class="webapp-ripple">
                      <div></div>
                      <i class="webapp-ripple-notification fas fa-server"></i>
                      <div></div>
                    </div>

                  </div>
                  <div class="login-form grid__padding pt-15" v-else>
                    <div class="full-width" v-if="regStep === 2">
                      <div class=" animated fadeInUp">
                        <div class="webapp-user-form-header m-b-sm nb ns">
                          <div class="webapp-user-form-inner">
                            <div class="grid__full">
                              <div class="card">
                                <div class="card-body">
                                  <div class="d-flex flex-row">
                                    <div class="round round-lg align-self-center"><i class="fas fa-user-plus"></i></div>
                                    <div class="m-l-10 align-self-center">
                                      <h3 class="wallet m-b-0 font-light text-white">Create Account</h3>
                                      <h5 class="wallet text-muted m-b-0 text-white">2. African librarian </h5>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <br/>
                        <div class="form-group grid__full mt-10">
                          <label class="form-component text-white" for="fullName">Full Name</label>
                          <div class="input-group grid__half__sticky full-border">
                            <div class="input-group-addon"><i class="fas fa-user"></i></div>
                            <input id="fullName" v-model.trim="librarianData.fullname.firstname"
                                   :class="validateUser.fname_error"
                                   class="form-control" type="text" placeholder="Firstname">
                          </div>
                          <div
                            class="input-group grid__half__sticky top-border right-border bottom-border left-border-mobile">
                            <input id="lastName" v-model.trim="librarianData.fullname.lastname"
                                   :class="validateUser.lname_error"
                                   class="form-control" type="text" placeholder="Lastname">
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="regEmail">Email ID</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-envelope"></i></div>
                            <input id="regEmail" v-model.trim="librarianData.email" :class="validateUser.email_error"
                                   class="form-control" type="text" placeholder="Email Address">
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="contactLine">Contact Line</label>
                          <div class="input-group top-border right-border bottom-border left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-mobile"></i></div>
                            <input id="contactLine" v-model.trim="librarianData.phone" :class="validateUser.phone_error"
                                   class="form-control" type="text" placeholder="+234...">
                          </div>
                        </div>

                        <div class="grid__half__sticky">
                          <label class="form-component text-white" for="password">Password</label>
                          <div class="form-group grid__full">
                            <div class="input-group full-border">
                              <div class="input-group-addon"><i class="fas fa-lock"></i></div>
                              <input id="password" v-model.trim="librarianData.password"
                                     :class="validateUser.password_error" class="form-control" type="password"
                                     placeholder="Password">
                            </div>
                          </div>
                        </div>
                        <div class="grid__half__sticky">

                          <div class="form-group grid__full">
                            <label class="form-component text-white" for="verify-password">Verify Password</label>
                            <div class="input-group top-border right-border bottom-border  left-border-mobile">

                              <input id="verify-password" v-model.trim="librarianData.verify_password"
                                     :class="validateUser.verify_password_error" class="form-control" type="password"
                                     placeholder="Password">
                            </div>
                          </div>
                        </div>

                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="Country">Country</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-flag"></i></div>
                            <div class="grid__full">
                              <div class="select" id="Country" v-if="countries.region.length">
                                <select name="user-country" class="form-control center-txt camelcase"
                                        v-model="librarianData.country">
                                  <option v-for="country in countries.region" :value="country" :key="country.code">{{
                                    country.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="School">University </label>
                          <div class="input-group top-border right-border bottom-border  left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-hospital"></i></div>
                            <div class="grid__full">
                              <div class="select" id="School" v-if="schools.name.length">
                                <select name="school-name" class="form-control center-txt camelcase"
                                        v-model="librarianData.school">
                                  <option v-for="school in schools.name" :value="school" :key="school.code">{{
                                    school.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__full">
                          <label class="form-component text-white" for="adminEmail">School Admin Email</label>
                          <div class="input-group top-border right-border bottom-border left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-envelope"></i></div>
                            <input id="adminEmail" v-model.trim="librarianData.schoolAdmin"
                                   :class="validateUser.schoolAdmin_error" class="form-control" type="text"
                                   placeholder="Email Address">
                          </div>
                        </div>


                        <div class="grid__full">
                          <button @click.prevent="createUser('librarian')" type="submit"
                                  class="button medium rounded bkg-green bkg-hover-green color-white color-hover-white">
                            <i class="fas fa-user-plus"></i> Sign Up
                          </button>
                        </div>
                      </div>
                    </div>
                    <div class="full-width" v-else-if="regStep === 3">
                      <div class=" animated fadeInUp">
                        <div class="webapp-user-form-header m-b-sm nb ns">
                          <div class="webapp-user-form-inner">
                            <div class="grid__full">
                              <div class="card">
                                <div class="card-body">
                                  <div class="d-flex flex-row">
                                    <div class="round round-lg align-self-center"><i class="fas fa-user-plus"></i></div>
                                    <div class="m-l-10 align-self-center">
                                      <h3 class="wallet m-b-0 font-light text-white">Create Account </h3>
                                      <h5 class="wallet text-muted m-b-0 text-white">2. Student Volunteer </h5>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <br/>
                        <div class="form-group grid__full mt-10">
                          <label class="form-component text-white" for="sfullName">Full Name</label>
                          <div class="input-group grid__half__sticky full-border">
                            <div class="input-group-addon"><i class="fas fa-user"></i></div>
                            <input id="sfullName" v-model.trim="studentData.fullname.firstname"
                                   :class="validateUser.fname_error"
                                   class="form-control" type="text" placeholder="Firstname">
                          </div>
                          <div
                            class="input-group grid__half__sticky top-border right-border bottom-border left-border-mobile">
                            <input id="slastName" v-model.trim="studentData.fullname.lastname"
                                   :class="validateUser.lname_error"
                                   class="form-control" type="text" placeholder="Lastname">
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="regEmail">Email ID</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-envelope"></i></div>
                            <input id="sEmail" v-model.trim="studentData.email" :class="validateUser.email_error"
                                   class="form-control" type="text" placeholder="Email Address">
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="contactLine">Contact Line</label>
                          <div class="input-group top-border right-border bottom-border left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-mobile"></i></div>
                            <input id="scontactLine" v-model.trim="studentData.phone" :class="validateUser.phone_error"
                                   class="form-control" type="text" placeholder="+234...">
                          </div>
                        </div>

                        <div class="grid__half__sticky">
                          <label class="form-component text-white" for="password">Password</label>
                          <div class="form-group grid__full">
                            <div class="input-group full-border">
                              <div class="input-group-addon"><i class="fas fa-lock"></i></div>
                              <input id="spassword" v-model.trim="studentData.password"
                                     :class="validateUser.password_error" class="form-control" type="password"
                                     placeholder="Password">
                            </div>
                          </div>
                        </div>
                        <div class="grid__half__sticky">

                          <div class="form-group grid__full">
                            <label class="form-component text-white" for="verify-password">Verify Password</label>
                            <div class="input-group top-border right-border bottom-border left-border-mobile">
                              <input id="sverify-password" v-model.trim="studentData.verify_password"
                                     :class="validateUser.verify_password_error" class="form-control" type="password"
                                     placeholder="Password">
                            </div>
                          </div>
                        </div>

                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="sCountry">Nationality</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-flag"></i></div>
                            <div class="grid__full">
                              <div class="select" id="sCountry" v-if="nationality.countries.length">
                                <select name="student-nationality" class="form-control center-txt camelcase"
                                        v-model="studentData.nationality">
                                  <option v-for="country in nationality.countries" :value="country" :key="country.code">
                                    {{
                                    country.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="sSchool">University </label>
                          <div class="input-group top-border right-border bottom-border  left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-hospital"></i></div>
                            <div class="grid__full">
                              <div class="select" id="sSchool" v-if="schools.name.length">
                                <select name="school-name" class="form-control center-txt camelcase"
                                        v-model="studentData.school">
                                  <option v-for="school in schools.name" :value="school" :key="school.code">{{
                                    school.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>

                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="sState">State</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-map-marker-alt"></i></div>
                            <div class="grid__full">
                              <div class="select" id="sState" v-if="schools.name.length">
                                <select name="school-name" class="form-control center-txt camelcase"
                                        v-model="studentData.state">
                                  <option v-for="school in schools.name" :value="school" :key="school.code">{{
                                    school.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="sTown">Town </label>
                          <div class="input-group top-border right-border bottom-border left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-hospital"></i></div>
                            <div class="grid__full">
                              <div class="select" id="sTown" v-if="schools.name.length">
                                <select name="school-name" class="form-control center-txt camelcase"
                                        v-model="studentData.town">
                                  <option v-for="school in schools.name" :value="school" :key="school.code">{{
                                    school.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>

                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="discipline">Field of Study</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-graduation-cap"></i></div>
                            <input id="discipline" v-model.trim="studentData.studyField"
                                   :class="validateUser.studyField_error" class="form-control" type="text"
                                   placeholder="Discipline">
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="position">Volunteer Role</label>
                          <div class="input-group top-border right-border bottom-border left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-id-badge"></i></div>
                            <input id="position" v-model.trim="studentData.volunteerRole"
                                   :class="validateUser.volunteerRole_error" class="form-control" type="text"
                                   placeholder="Volunteer Role">
                          </div>
                        </div>

                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="africanDegree">African Degree ?</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-certificate"></i></div>
                            <div class="grid__full">
                              <div class="select" id="africanDegree" v-if="schools.name.length">
                                <select name="school-name" class="form-control center-txt camelcase"
                                        v-model="studentData.africanDegree">
                                  <option v-for="school in schools.name" :value="school" :key="school.code">{{
                                    school.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="africanUni">African University </label>
                          <div class="input-group top-border right-border bottom-border left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-hospital"></i></div>
                            <div class="grid__full">
                              <div class="select" id="africanUni" v-if="schools.name.length">
                                <select name="school-name" class="form-control center-txt camelcase"
                                        v-model="studentData.africanSchool">
                                  <option v-for="school in schools.name" :value="school" :key="school.code">{{
                                    school.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>

                        <div class="grid__full">
                          <button @click.prevent="createUser('student')" type="submit"
                                  class="button medium rounded bkg-green bkg-hover-green color-white color-hover-white">
                            <i class="fas fa-user-plus"></i> Sign Up
                          </button>
                        </div>
                      </div>

                    </div>
                    <div class="full-width" v-else-if="regStep === 4">
                      <div class=" animated fadeInUp">
                        <div class="webapp-user-form-header m-b-sm nb ns">
                          <div class="webapp-user-form-inner">
                            <div class="grid__full">
                              <div class="card">
                                <div class="card-body">
                                  <div class="d-flex flex-row">
                                    <div class="round round-lg align-self-center"><i class="fas fa-user-plus"></i></div>
                                    <div class="m-l-10 align-self-center">
                                      <h3 class="wallet m-b-0 font-light text-white">Create Account </h3>
                                      <h5 class="wallet text-muted m-b-0 text-white">2. Other Volunteer </h5>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <br/>
                        <div class="form-group grid__full mt-10">
                          <label class="form-component text-white" for="ofullName">Full Name</label>
                          <div class="input-group grid__half__sticky full-border">
                            <div class="input-group-addon"><i class="fas fa-user"></i></div>
                            <input id="ofullName" v-model.trim="otherData.fullname.firstname"
                                   :class="validateUser.fname_error"
                                   class="form-control" type="text" placeholder="Firstname">
                          </div>
                          <div
                            class="input-group grid__half__sticky top-border right-border bottom-border left-border-mobile">
                            <input id="olastName" v-model.trim="otherData.fullname.lastname"
                                   :class="validateUser.lname_error"
                                   class="form-control" type="text" placeholder="Lastname">
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="oEmail">Email ID</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-envelope"></i></div>
                            <input id="oEmail" v-model.trim="otherData.email" :class="validateUser.email_error"
                                   class="form-control" type="text" placeholder="Email Address">
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="ocontactLine">Contact Line</label>
                          <div class="input-group top-border right-border bottom-border left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-mobile"></i></div>
                            <input id="ocontactLine" v-model.trim="otherData.phone" :class="validateUser.phone_error"
                                   class="form-control" type="text" placeholder="+234...">
                          </div>
                        </div>
                        <div class="grid__half__sticky">
                          <label class="form-component text-white" for="opassword">Password</label>
                          <div class="form-group grid__full">
                            <div class="input-group full-border">
                              <div class="input-group-addon"><i class="fas fa-lock"></i></div>
                              <input id="opassword" v-model.trim="otherData.password"
                                     :class="validateUser.password_error" class="form-control" type="password"
                                     placeholder="Password">
                            </div>
                          </div>
                        </div>
                        <div class="grid__half__sticky">

                          <div class="form-group grid__full">
                            <label class="form-component text-white" for="overify-password">Verify Password</label>
                            <div class="input-group top-border right-border bottom-border  left-border-mobile">

                              <input id="overify-password" v-model.trim="otherData.verify_password"
                                     :class="validateUser.verify_password_error" class="form-control" type="password"
                                     placeholder="Password">
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="oCountry">Nationality</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-flag"></i></div>
                            <div class="grid__full">
                              <div class="select" id="oCountry" v-if="nationality.countries.length">
                                <select name="student-nationality" class="form-control center-txt camelcase"
                                        v-model="otherData.nationality">
                                  <option v-for="country in nationality.countries" :value="country" :key="country.code">
                                    {{
                                    country.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="location">Current Location</label>
                          <div class="input-group top-border right-border bottom-border  left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-map-marker-alt"></i></div>
                            <div class="grid__full">
                              <div class="select" id="location" v-if="nationality.countries.length">
                                <select name="school-name" class="form-control center-txt camelcase"
                                        v-model="otherData.location">
                                  <option v-for="country in nationality.countries" :value="country" :key="country.code">
                                    {{
                                    country.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="workHours">Work Hours</label>
                          <div class="input-group full-border">
                            <div class="input-group-addon"><i class="fas fa-clock"></i></div>
                            <div class="grid__full">
                              <div class="select" id="workHours" v-if="workHours.slots.length">
                                <select name="school-name" class="form-control center-txt camelcase"
                                        v-model="otherData.workHours">
                                  <option v-for="slot in workHours.slots" :value="slot" :key="slot.code">{{
                                    slot.name }}
                                  </option>
                                </select>
                              </div>
                            </div>
                          </div>
                        </div>
                        <div class="form-group grid__half">
                          <label class="form-component text-white" for="oposition">Volunteer Role</label>
                          <div class="input-group top-border right-border bottom-border left-border-mobile">
                            <div class="input-group-addon"><i class="fas fa-id-badge"></i></div>
                            <input id="oposition" v-model.trim="otherData.volunteerRole"
                                   :class="validateUser.volunteerRole_error" class="form-control" type="text"
                                   placeholder="Volunteer Role">
                          </div>
                        </div>
                        <div class="form-group grid__full">
                          <label class="form-component text-white" for="motivation">Motivation</label>
                          <div class="input-group grid__full full-border">
                            <textarea v-model="otherData.motivation" name="motivation" id="motivation"
                                      class="form-control"
                                      :class="validateUser.motivation_error" rows="5" cols="30"
                                      placeholder="Tell us why to want to join us"></textarea>
                          </div>
                        </div>
                        <div class="grid__full">
                          <button @click.prevent="createUser('other')" type="submit"
                                  class="button medium rounded bkg-green bkg-hover-green color-white color-hover-white">
                            <i class="fas fa-user-plus"></i> Sign Up
                          </button>
                        </div>
                      </div>
                    </div>
                    <div class="full-width" v-else>
                      <div class="webapp-user-form-header m-b-sm nb ns">
                        <div class="webapp-user-form-inner">
                          <div class="grid__full">
                            <div class="card">
                              <div class="card-body">
                                <div class="d-flex flex-row">
                                  <div class="round round-lg align-self-center"><i class="fas fa-user-plus"></i></div>
                                  <div class="m-l-10 align-self-center">
                                    <h3 class="wallet m-b-0 font-light text-white">Get Started </h3>
                                    <h5 class="wallet text-muted m-b-0 text-white">1. Please select a category </h5>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="webapp-user-form-header m-b-sm nb ns">
                        <div class="webapp-user-form-inner">
                          <div class="grid__full mt-20 mb-10">
                            <div class="grid__full">
                              <button @click.prevent="selectUser('librarian')" type="submit"
                                      class="signup-button button medium rounded bkg-green bkg-hover-green color-white color-hover-white">
                                <i class="fas fa-user-plus"></i> African librarian
                              </button>
                            </div>
                            <div class="grid__full">
                              <button @click.prevent="selectUser('student')" type="submit"
                                      class="signup-button button medium rounded bkg-green bkg-hover-green color-white color-hover-white">
                                <i class="fas fa-user-plus"></i> Student Volunteer
                              </button>
                            </div>
                            <div class="grid__full">
                              <button @click.prevent="selectUser('other')" type="submit"
                                      class="signup-button button medium rounded bkg-green bkg-hover-green color-white color-hover-white">
                                <i class="fas fa-user-plus"></i> Other Volunteer
                              </button>
                            </div>

                          </div>
                        </div>
                      </div>
                      <div class="webapp-user-form-header m-b-sm nb ns">
                        <div class="webapp-user-form-inner">
                          <div class="grid__full">
                            <div class="grid__full">
                              <p class="lead-alt light-txt no-margins">Already have an Account ?</p>
                              <button @click.prevent="login()" type="submit"
                                      class="mt-10 button medium rounded bkg-green bkg-hover-green color-white color-hover-white">
                                <i class="fas fa-lock"></i> Sign in
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>

                </div>


              </form>


            </div>

          </div>

        </div>
      </div>
    </main>
  </div>
</template>
<script>
import axios from "../api/efiwe";

export default {
  data() {
    return {
      active: true,
      authenticated: this.session,
      validEmail: false,
      proceed: true,
      calendar: {
        day: [
          { code: "01", name: "1st" },
          { code: "02", name: "2nd" },
          { code: "03", name: "3rd" },
          { code: "04", name: "4th" },
          { code: "05", name: "5th" },
          { code: "06", name: "6th" },
          { code: "07", name: "7th" },
          { code: "08", name: "8th" },
          { code: "09", name: "9th" },
          { code: "10", name: "10th" },
          { code: "11", name: "11th" },
          { code: "12", name: "12th" },
          { code: "13", name: "13th" },
          { code: "14", name: "14th" },
          { code: "15", name: "15th" },
          { code: "16", name: "16th" },
          { code: "17", name: "17th" },
          { code: "18", name: "18th" },
          { code: "19", name: "19th" },
          { code: "20", name: "20th" },
          { code: "21", name: "21st" },
          { code: "22", name: "22nd" },
          { code: "23", name: "23rd" },
          { code: "24", name: "24th" },
          { code: "25", name: "25th" },
          { code: "26", name: "26th" },
          { code: "27", name: "27th" },
          { code: "28", name: "28th" },
          { code: "29", name: "29th" },
          { code: "30", name: "30th" },
          { code: "31", name: "31st" }
        ],
        month: [
          { code: "01", name: "January" },
          { code: "02", name: "February" },
          { code: "03", name: "March" },
          { code: "04", name: "April" },
          { code: "05", name: "May" },
          { code: "06", name: "June" },
          { code: "07", name: "July" },
          { code: "08", name: "August" },
          { code: "09", name: "September" },
          { code: "10", name: "October" },
          { code: "11", name: "Novemeber" },
          { code: "12", name: "December" }
        ]
      },
      dob: {
        day: "",
        month: "",
        year: ""
      },
      workHours: {
        slots: [
          { code: "1-3", name: "1-3 Hours weekly" },
          { code: "2-4", name: "2-4 Hours weekly" },
          { code: "3-6", name: "3-6 Hours weekly" },
          { code: "4-8", name: "4-8 Hours weekly" },
          { code: "5-10", name: "5-10 Hours weekly" },
          { code: "6-12", name: "6-12 Hours weekly" }
        ]
      },
      countries: {
        region: [
          { code: "Algeria", name: "Algeria" },
          { code: "Canada", name: "Canada" },
          { code: "Brazil", name: "Brazil" },
          { code: "USA", name: "USA" },
          { code: "Nigeria", name: "Nigeria" },
          { code: "United-Kingdom", name: "United Kingdom" },
          { code: "Spain", name: "Spain" },
          { code: "Portugal", name: "Portugal" },
          { code: "France", name: "France" },
          { code: "Germany", name: "Germany" },
          { code: "India", name: "India" },
          { code: "Japan", name: "Japan" },
          { code: "South-Africa", name: "South Africa" },
          { code: "Kenya", name: "Kenya" }
        ]
      },
      nationality: {
        countries: [
          { code: "Algeria", name: "Algeria" },
          { code: "Canada", name: "Canada" },
          { code: "Brazil", name: "Brazil" },
          { code: "USA", name: "USA" },
          { code: "Nigeria", name: "Nigeria" },
          { code: "United-Kingdom", name: "United Kingdom" },
          { code: "Spain", name: "Spain" },
          { code: "Portugal", name: "Portugal" },
          { code: "France", name: "France" },
          { code: "Germany", name: "Germany" },
          { code: "India", name: "India" },
          { code: "Japan", name: "Japan" },
          { code: "South-Africa", name: "South Africa" },
          { code: "Kenya", name: "Kenya" }
        ]
      },
      schools: {
        name: [
          { code: "Unilag", name: "Univerity of Lagos" },
          { code: "Bolton-University", name: "University of Bolton" },
          { code: "Canadian-University", name: "Canadian University" },
          { code: "Berlin-University", name: "University of Berlin" },
          { code: "havard-university", name: "Havard University" },
          { code: "spain-university", name: "Espanol Univerity" },
          { code: "UNITED-KINGDOM", name: "Univerity of Notthingham" }
        ]
      },
      validateUser: {
        fname_error: { "form-error": false },
        lname_error: { "form-error": false },
        phone_error: { "form-error": false },
        email_error: { "form-error": false },
        dob_error: { "form-error": false },
        verify_password_error: { "form-error": false },
        password_error: { "form-error": false },
        schoolAdmin_error: { "form-error": false },
        studyField_error: { "form-error": false },
        volunteerRole_error: { "form-error": false },
        motivation_error: { "form-error": false }
      },
      headerTag: { "animated fadeInUp": false, hidden: true },
      librarianData: {
        token:
          "B4503F632C776204DB0745864456239D78F783191803BE59E2001E4B5262A5270C12ADB76C95BC7563DFC01988662E033169451F455E54BE4FD5097B88E2846B",
        fullname: {
          firstname: "",
          lastname: ""
        },
        email: "",
        phone: "",
        password: "",
        verify_password: "",
        country: "",
        school: "",
        schoolAdmin: ""
      },
      studentData: {
        token:
          "B4503F632C776204DB0745864456239D78F783191803BE59E2001E4B5262A5270C12ADB76C95BC7563DFC01988662E033169451F455E54BE4FD5097B88E2846B",
        fullname: {
          firstname: "",
          lastname: ""
        },
        email: "",
        phone: "",
        password: "",
        verify_password: "",
        nationality: "",
        school: "",
        state: "",
        town: "",
        studyField: "",
        volunteerRole: "",
        africanDegree: "",
        africanSchool: ""
      },
      otherData: {
        token:
          "B4503F632C776204DB0745864456239D78F783191803BE59E2001E4B5262A5270C12ADB76C95BC7563DFC01988662E033169451F455E54BE4FD5097B88E2846B",
        fullname: {
          firstname: "",
          lastname: ""
        },
        email: "",
        phone: "",
        password: "",
        verify_password: "",
        nationality: "",
        location: "",
        volunteerRole: "",
        workHours: "",
        motivation: ""
      },
      regVerification: 0,
      regStep: 1
    };
  },
  methods: {
    selectUser(selected) {
      if (selected === "librarian") {
        this.regStep = 2;
      } else if (selected === "student") {
        this.regStep = 3;
      } else if (selected === "other") {
        this.regStep = 4;
      } else {
        this.regStep = 1;
      }
    },
    createUser(category) {
      const reg = /^([A-Za-z0-9_\-.])+@([A-Za-z0-9_\-.])+.([A-Za-z]{2,4})$/;
      const numbersOnly = /[0-9]|\./;
      if (category === "librarian") {
        this.validEmail = reg.test(this.librarianData.email);
        this.validAdmin = reg.test(this.librarianData.schoolAdmin);

        if (this.librarianData.fullname.firstname.length <= 3) {
          this.validateUser.fname_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.fname_error = { "form-error": false };
        }

        if (this.librarianData.fullname.lastname.length <= 3) {
          this.validateUser.lname_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.lname_error = { "form-error": false };
        }

        if (this.librarianData.phone.length <= 3) {
          this.validateUser.phone_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.phone_error = { "form-error": false };
        }

        if (this.validEmail === false) {
          this.validateUser.email_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.email_error = { "form-error": false };
        }

        if (this.librarianData.password.length <= 5) {
          this.validateUser.password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.password_error = { "form-error": false };
        }

        if (this.librarianData.verify_password.length <= 5) {
          this.validateUser.verify_password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.verify_password_error = { "form-error": false };
        }

        if (this.validAdmin === false) {
          this.validateUser.schoolAdmin_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.schoolAdmin_error = { "form-error": false };
        }

        if (
          this.librarianData.password !== this.librarianData.verify_password
        ) {
          this.validateUser.verify_password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.verify_password_error = { "form-error": false };
        }

        if (
          this.librarianData.fullname.firstname.length > 3 &&
          this.librarianData.fullname.lastname.length > 3 &&
          this.librarianData.phone.length > 3 &&
          this.librarianData.password.length > 5 &&
          this.librarianData.verify_password.length > 5 &&
          this.librarianData.password === this.librarianData.verify_password &&
          this.validEmail === true &&
          this.validAdmin === true
        ) {
          this.proceed = true;
          let formActor = this.proceed;
          this.processRequest(formActor);
        } else console.log("coudnt validate all fields");
      } else if (category === "student") {
        this.validEmail = reg.test(this.studentData.email);

        if (this.studentData.fullname.firstname.length <= 3) {
          this.validateUser.fname_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.fname_error = { "form-error": false };
        }

        if (this.studentData.fullname.lastname.length <= 3) {
          this.validateUser.lname_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.lname_error = { "form-error": false };
        }

        if (this.studentData.phone.length <= 3) {
          this.validateUser.phone_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.phone_error = { "form-error": false };
        }

        if (this.validEmail === false) {
          this.validateUser.email_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.email_error = { "form-error": false };
        }

        if (this.studentData.password.length <= 5) {
          this.validateUser.password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.password_error = { "form-error": false };
        }

        if (this.studentData.verify_password.length <= 5) {
          this.validateUser.verify_password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.verify_password_error = { "form-error": false };
        }

        if (this.studentData.studyField.length <= 3) {
          this.validateUser.studyField_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.studyField_error = { "form-error": false };
        }

        if (this.studentData.volunteerRole.length <= 3) {
          this.validateUser.volunteerRole_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.volunteerRole_error = { "form-error": false };
        }

        if (this.studentData.password !== this.studentData.verify_password) {
          this.validateUser.verify_password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.verify_password_error = { "form-error": false };
        }

        if (
          this.studentData.fullname.firstname.length > 3 &&
          this.studentData.fullname.lastname.length > 3 &&
          this.studentData.phone.length > 3 &&
          this.studentData.password.length > 5 &&
          this.studentData.verify_password.length > 5 &&
          this.studentData.password === this.studentData.verify_password &&
          this.validEmail === true &&
          this.studentData.studyField.length > 3 &&
          this.studentData.volunteerRole.length > 3
        ) {
          this.proceed = true;
          let formActor = this.proceed;
          this.processRequest(formActor);
        } else console.log("coudnt validate all fields");
      } else if (category === "other") {
        this.validEmail = reg.test(this.otherData.email);

        if (this.otherData.fullname.firstname.length <= 3) {
          this.validateUser.fname_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.fname_error = { "form-error": false };
        }

        if (this.otherData.fullname.lastname.length <= 3) {
          this.validateUser.lname_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.lname_error = { "form-error": false };
        }

        if (this.otherData.phone.length <= 3) {
          this.validateUser.phone_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.phone_error = { "form-error": false };
        }

        if (this.validEmail === false) {
          this.validateUser.email_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.email_error = { "form-error": false };
        }

        if (this.otherData.password.length <= 5) {
          this.validateUser.password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.password_error = { "form-error": false };
        }

        if (this.otherData.verify_password.length <= 5) {
          this.validateUser.verify_password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.verify_password_error = { "form-error": false };
        }

        if (this.otherData.volunteerRole.length <= 3) {
          this.validateUser.volunteerRole_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.volunteerRole_error = { "form-error": false };
        }

        if (this.otherData.motivation.length <= 3) {
          this.validateUser.motivation_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.motivation_error = { "form-error": false };
        }

        if (this.otherData.password !== this.otherData.verify_password) {
          this.validateUser.verify_password_error = { "form-error": true };
          this.proceed = false;
        } else {
          this.validateUser.verify_password_error = { "form-error": false };
        }

        if (
          this.otherData.fullname.firstname.length > 3 &&
          this.otherData.fullname.lastname.length > 3 &&
          this.otherData.phone.length > 3 &&
          this.otherData.password.length > 5 &&
          this.otherData.verify_password.length > 5 &&
          this.otherData.password === this.otherData.verify_password &&
          this.validEmail === true &&
          this.otherData.volunteerRole.length > 3 &&
          this.otherData.motivation.length > 3
        ) {
          this.proceed = true;
          let formActor = this.proceed;
          this.processRequest(formActor);
        } else console.log("coudnt validate all fields");
      } else {
        console.log("Invalid category type for new user");
      }
    },
    processRequest(formActor) {
      const validUSignup = formActor;
      if (validUSignup) {
        this.regVerification = 1;
        axios
          .post("/create-user.php", this.librarianData)
          .then(signupResponse => {
            if (signupResponse.data === "Registration Successful") {
              /* Email Notification For New User */
              axios
                .post("/notify-user.php", this.librarianData)
                .then(notificationResponse => {
                  if (notificationResponse.data === "Notification Sent") {
                    console.log("Registration Notification Sent");
                  } else {
                    console.log("Registration Notification Error");
                  }
                })
                .catch(error => console.log(error));

              setTimeout(() => {
                this.regVerification = 2;
                let crypto = Math.random()
                  .toString(36)
                  .substr(2, 14);
                let loginToken = {
                  email: this.librarianData.email,
                  user: this.librarianData.fullname,
                  phone: this.librarianData.phone,
                  "session-id": crypto
                };
                localStorage.setItem("loginToken", JSON.stringify(loginToken));
                this.authenticated = this.session;
                console.log(loginToken);
                setTimeout(() => {
                  window.location.href = "./";
                }, 4000);
              }, 3500);
            } else if (signupResponse.data === "Registration Error") {
              setTimeout(() => {
                this.regVerification = 3;
                setTimeout(() => {
                  this.regVerification = 0;
                }, 5000);
              }, 3500);
            } else if (signupResponse.data === "Already Registered") {
              setTimeout(() => {
                this.regVerification = 4;
                setTimeout(() => {
                  this.regVerification = 0;
                }, 5000);
              }, 3500);
            } else {
              setTimeout(() => {
                this.regVerification = 3;
              }, 3500);
            }
          })
          .catch(error => console.log(error));
      }
    },
    populateForms() {
      this.dob.day = this.calendar.day[0];
      this.dob.month = this.calendar.month[0];
      this.librarianData.country = this.countries.region[0];
      this.librarianData.school = this.schools.name[0];
      this.studentData.nationality = this.nationality.countries[0];
      this.studentData.state = this.schools.name[0];
      this.studentData.school = this.schools.name[0];
      this.studentData.town = this.schools.name[0];
      this.studentData.africanDegree = this.schools.name[0];
      this.studentData.africanSchool = this.schools.name[0];
      this.otherData.workHours = this.workHours.slots[0];
      this.otherData.nationality = this.nationality.countries[0];
      this.otherData.location = this.nationality.countries[0];
    },
    login() {
      this.$router.push("/login");
    }
  },
  props: ["session"],
  mounted() {
    this.populateForms();
    setTimeout(() => {
      this.headerTag = { "animated fadeInUp": true, hidden: false };
      setTimeout(() => {
        this.headerTag = { "animated fadeInDown": false, hidden: false };
      }, 1500);
    }, 100);
  }
};
</script>
